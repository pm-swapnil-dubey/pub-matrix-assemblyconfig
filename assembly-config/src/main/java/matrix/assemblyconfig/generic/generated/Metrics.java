//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.7 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2014.06.23 at 11:57:42 PM EDT 
//


package matrix.assemblyconfig.generic.generated;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.List;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlType;

import cascading.pipe.assembly.AggregateBy;
import cascading.pipe.assembly.AverageBy;
import cascading.pipe.assembly.CountBy;
import cascading.pipe.assembly.FirstBy;
import cascading.pipe.assembly.MaxBy;
import cascading.pipe.assembly.MinBy;
import cascading.pipe.assembly.SumBy;
import cascading.tuple.Fields;


/**
 * <p>Java class for anonymous complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType>
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element ref="{http://matrix.pubmatic.com/matrix/reports}metric" maxOccurs="unbounded"/>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "", propOrder = {
    "metric"
})
@XmlRootElement(name = "metrics")
public class Metrics implements Serializable{

    @XmlElement(required = true)
    protected List<Metric> metric;

    /**
     * Gets the value of the metric property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the metric property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getMetric().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link Metric }
     * 
     * 
     */
    public List<Metric> getMetric() {
        if (metric == null) {
            metric = new ArrayList<Metric>();
        }
        return this.metric;
    }
    
    /**
     * Gets AggregateBy Sub assemblies based on aggregation type defined in xml
     * @return
     */
    public AggregateBy[] getAggregateBySubAssemblies(){
      AggregateBy[] aggregateBy = new AggregateBy[metric.size()];
      int i=0;
      for(Metric m : metric){
        aggregateBy[i] = createAggregateByFromMetric(m);
        i++;
      }
      return aggregateBy;
    }

    private AggregateBy createAggregateByFromMetric(Metric metric) {
      switch (metric.getOperation()) {
        case AVERAGE:
          return new AverageBy(new Fields(metric.getName()), new Fields(metric.getName()));
        case COUNT:
          return new CountBy(new Fields(metric.getName()), new Fields(metric.getName()));
        case SUM:
          return new SumBy(new Fields(metric.getName()), new Fields(metric.getName()),
              getFieldTypeClass(metric.getType()));
        case MAX:
          return new MaxBy(new Fields(metric.getName()), new Fields(metric.getName()));
        case MIN:
          return new MinBy(new Fields(metric.getName()), new Fields(metric.getName()));
        case FIRST:
          return new FirstBy(new Fields(metric.getName()));
        default:
          return null;
      }
    }

    private Class getFieldTypeClass(FieldType type) {
      switch (type) {
        case DOUBLE:
          return Double.class;
        case INTEGER:
          return Integer.class;
        case LONG:
          return Long.class;
        default:
          throw new RuntimeException("Invalid Field Type [ " + type + " ]");
      }
    }
    
}
