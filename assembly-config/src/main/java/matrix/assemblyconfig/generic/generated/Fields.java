//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference
// Implementation, v2.2.7
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a>
// Any modifications to this file will be lost upon recompilation of the source schema.
// Generated on: 2014.06.23 at 11:57:42 PM EDT
//


package matrix.assemblyconfig.generic.generated;

import java.util.ArrayList;
import java.util.List;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>
 * Java class for anonymous complex type.
 * 
 * <p>
 * The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType>
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element ref="{http://matrix.pubmatic.com/matrix/reports}dimensions"/>
 *         &lt;element ref="{http://matrix.pubmatic.com/matrix/reports}metrics"/>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "", propOrder = {"dimensions", "metrics"})
@XmlRootElement(name = "fields")
public class Fields {

  @XmlElement(required = true)
  protected Dimensions dimensions;
  @XmlElement(required = true)
  protected Metrics metrics;

  /**
   * Gets the value of the dimensions property.
   * 
   * @return possible object is {@link Dimensions }
   * 
   */
  public Dimensions getDimensions() {
    return dimensions;
  }

  /**
   * Sets the value of the dimensions property.
   * 
   * @param value allowed object is {@link Dimensions }
   * 
   */
  public void setDimensions(Dimensions value) {
    this.dimensions = value;
  }

  /**
   * Gets the value of the metrics property.
   * 
   * @return possible object is {@link Metrics }
   * 
   */
  public Metrics getMetrics() {
    return metrics;
  }

  /**
   * Sets the value of the metrics property.
   * 
   * @param value allowed object is {@link Metrics }
   * 
   */
  public void setMetrics(Metrics value) {
    this.metrics = value;
  }

  /**
   * Gets name of dimensions and metrics in the order as defined in xml
   * 
   * @return
   */
  public String[] getFieldNames() {
    String[] fieldNames = new String[dimensions.getDimension().size() + metrics.getMetric().size()];
    int i = 0;
    for (Dimension dimension : dimensions.getDimension()) {
      fieldNames[i] = dimension.getName();
      i++;
    }
    for (Metric metric : metrics.getMetric()) {
      fieldNames[i] = metric.getName();
      i++;
    }
    return fieldNames;
  }

  public List getFieldExtractors() {
    List fieldExtractors = new ArrayList<>();
    try {
      for (Dimension dimension : dimensions.getDimension()) {
        Class extractorClass = Class.forName(dimension.getFieldExtractor());
        fieldExtractors.add(extractorClass.newInstance());
      }
      for (Metric metric : metrics.getMetric()) {
        Class extractorClass = Class.forName(metric.getFieldExtractor());
        fieldExtractors.add(extractorClass.newInstance());
      }
    } catch (Exception e) {
      throw new RuntimeException(e);
    }
    return fieldExtractors;
  }

}
