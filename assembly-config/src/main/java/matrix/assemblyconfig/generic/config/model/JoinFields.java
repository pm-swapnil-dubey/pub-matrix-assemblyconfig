//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.7 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2014.06.25 at 12:27:50 AM EDT 
//


package matrix.assemblyconfig.generic.config.model;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for anonymous complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType>
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element ref="{http://matrix.pubmatic.com/matrix/reports}joinField" maxOccurs="unbounded"/>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "", propOrder = {
    "joinField"
})
@XmlRootElement(name = "joinFields")
public class JoinFields implements Serializable{

    @XmlElement(required = true)
    protected List<JoinField> joinField;

    /**
     * Gets the value of the joinField property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the joinField property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getJoinField().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link JoinField }
     * 
     * 
     */
    public List<JoinField> getJoinField() {
        if (joinField == null) {
            joinField = new ArrayList<JoinField>();
        }
        return this.joinField;
    }
    
    public String[] getJoinKeyFields(){
      List<String> keyList = new ArrayList<>();
      for(JoinField jf : joinField){
        if(jf.isJoinKey()){
          keyList.add(jf.getName());
        }
      }
      return Arrays.copyOf(keyList.toArray(), keyList.size(), String[].class);
    }
    
    public String[] getStrJoinFields(){
      String[] joinFields = new String[joinField.size()];
      for(int i=0; i<joinField.size() ;i++){
        joinFields[i] = joinField.get(i).getName();
      }
      return joinFields;
    }

}
