//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.7 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2014.06.25 at 12:27:50 AM EDT 
//


package matrix.assemblyconfig.generic.config.model;

import java.io.Serializable;
import java.util.HashMap;
import java.util.Map;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for anonymous complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType>
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element ref="{http://matrix.pubmatic.com/matrix/reports}simpleMetrics"/>
 *         &lt;element ref="{http://matrix.pubmatic.com/matrix/reports}derivedFromOtherMetrics"/>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "", propOrder = {
    "simpleMetrics",
    "derivedFromOtherMetrics"
})
@XmlRootElement(name = "metrics")
public class Metrics implements Serializable{

    @XmlElement(required = true)
    protected SimpleMetrics simpleMetrics;
    @XmlElement(required = true)
    protected DerivedFromOtherMetrics derivedFromOtherMetrics;

    /**
     * Gets the value of the simpleMetrics property.
     * 
     * @return
     *     possible object is
     *     {@link SimpleMetrics }
     *     
     */
    public SimpleMetrics getSimpleMetrics() {
        return simpleMetrics;
    }

    /**
     * Sets the value of the simpleMetrics property.
     * 
     * @param value
     *     allowed object is
     *     {@link SimpleMetrics }
     *     
     */
    public void setSimpleMetrics(SimpleMetrics value) {
        this.simpleMetrics = value;
    }

    /**
     * Gets the value of the derivedFromOtherMetrics property.
     * 
     * @return
     *     possible object is
     *     {@link DerivedFromOtherMetrics }
     *     
     */
    public DerivedFromOtherMetrics getDerivedFromOtherMetrics() {
        return derivedFromOtherMetrics;
    }

    /**
     * Sets the value of the derivedFromOtherMetrics property.
     * 
     * @param value
     *     allowed object is
     *     {@link DerivedFromOtherMetrics }
     *     
     */
    public void setDerivedFromOtherMetrics(DerivedFromOtherMetrics value) {
        this.derivedFromOtherMetrics = value;
    }
    
    /*public AggregateBy[] getFinalAggregateBySubAssemblies(){
      AggregateBy[] aggregateBy = new AggregateBy[simpleMetrics.getSimpleMetric().size()+derived];
      int i=0;
      for(SimpleMetric m : simpleMetric){
        m.getType();
        aggregateBy[i] = AggregateByUtil.createAggregateByFromMetric(m.getOperation(), m.getName(), m.getType());
        i++;
      }
      return aggregateBy;
    }*/
    
    public Map<String, FieldType> getFieldAndTypeMap(){
      Map<String, FieldType> fieldAndTypeMap = new HashMap<String, FieldType>();
      fieldAndTypeMap.putAll(simpleMetrics.getFieldAndTypeMap());
      fieldAndTypeMap.putAll(derivedFromOtherMetrics.getFieldAndTypeMap());
      return fieldAndTypeMap;
    }

}
